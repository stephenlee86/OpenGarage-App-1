angular.module("opengarage",["ionic","uiCropper","opengarage.controllers","opengarage.utils","opengarage.cloud","opengarage.watch"]).run(function($state,$ionicPlatform,$ionicScrollDelegate,$document,$window,$rootScope,$filter,$ionicLoading,$timeout,Utils,Cloud,Watch){$ionicPlatform.ready(function(){if($rootScope.open=function(url){window.SafariViewController?window.SafariViewController.isAvailable(function(available){available?window.SafariViewController.show({url:url,tintColor:"#444444",barColor:"#444444",controlTintColor:"#ffffff"}):window.open(url,"_blank","toolbarposition=top")}):window.open(url,"_blank","toolbarposition=top")},window.cordova&&window.cordova.plugins&&window.cordova.plugins.Keyboard&&window.cordova.plugins.Keyboard.hideKeyboardAccessoryBar&&window.cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),window.StatusBar&&(window.StatusBar.styleLightContent(),window.StatusBar.backgroundColorByHexString("#444"),angular.element($window).on("statusTap",function(){$ionicScrollDelegate.scrollTop()})),window.geofence){$rootScope.hasGeofence=!0,$rootScope.startGeofence=function(callback){window.geofence.initialize().then(function(){callback(!0)},function(){callback(!1)})},window.geofence.getWatched(function(fences){$rootScope.geoFences=JSON.parse(fences)});var handleGeofence=function(geofences){geofences&&(geofences.notification&&(geofences=[geofences]),$rootScope.$apply(function(){geofences.forEach(function(geo){var data=geo.notification.id.split("-"),controller=$filter("filter")($rootScope.controllers,{mac:data[1]});controller&&"open"===data[0]&&0===controller.door&&"close"===data[0]&&1===controller.door&&Utils.toggleDoor(controller.apikey)})}))};window.geofence.onTransitionReceived=handleGeofence,window.geofence.onNotificationClicked=handleGeofence}window.ThreeDeeTouch&&(Utils.updateQuickLinks(),window.ThreeDeeTouch.enableLinkPreview(),window.ThreeDeeTouch.onHomeIconPressed=function(payload){var data=payload.type.split("-");if("toggle"===data[0]){var controller=$filter("filter")($rootScope.controllers,{mac:data[1]});controller&&Utils.toggleDoor(controller.apikey)}}),window.applewatch&&window.navigator.simulator!==!0&&(window.applewatch.init(angular.noop),window.toggleDoorByIndex=function(index){Utils.toggleDoor($rootScope.controllers[index].auth)},window.applewatch.callback.onLoadAppMainRequest=Watch.loadApp),$timeout(function(){try{navigator.splashscreen.hide()}catch(err){}},500)}),$rootScope.connected=!1,$rootScope.version=window.appVersion,$rootScope.loadingQueue=[],$rootScope.controllers=[],$rootScope.$on("loading:show",function(e,data){var scope=$rootScope.$new();scope.canceller=data?data.canceller.resolve:function(){$rootScope.$broadcast("loading:hide")},$rootScope.loadingQueue.push(scope.canceller),$ionicLoading.show({template:"<ion-spinner></ion-spinner><br>One moment please<br><button class='button white icon-left ion-ios-close-outline button-clear' ng-click='canceller()'>Cancel</button>",scope:scope})}),$rootScope.$on("loading:hide",function(){if($rootScope.loadingQueue.pop(),$ionicLoading.hide(),$rootScope.loadingQueue.length>0){var scope=$rootScope.$new();scope.canceller=$rootScope.loadingQueue[$rootScope.loadingQueue.length-1],$ionicLoading.show({template:"<ion-spinner></ion-spinner><br>One moment please<br><button class='button white icon-left ion-ios-close-outline button-clear' ng-click='canceller()'>Cancel</button>",scope:scope})}}),$rootScope.$on("$ionicView.afterEnter",function(){$document[0].title="OpenGarage"}),angular.element($document).on("resume",function(){$timeout(function(){Utils.checkNewController(),Cloud.sync()},100)});var firstLoadHandler=$rootScope.$on("$stateChangeStart",function(event){firstLoadHandler(),event.preventDefault(),Utils.storage.get(["activeController","controllers","cloudToken"],function(data){try{$rootScope.controllers=JSON.parse(data.controllers),$rootScope.activeController=JSON.parse(data.activeController)}catch(err){}$rootScope.controllers||($rootScope.controllers=[]),Cloud.sync(),$rootScope.activeController&&"object"==typeof $rootScope.activeController?($state.go("app.home"),Utils.updateController()):$rootScope.controllers.length||data.cloudToken?$state.go("app.controllerSelect"):$state.go("login")}),Utils.checkNewController()});angular.element(window).on("resize",function(){$rootScope.$broadcast("window:resize");var content=document.getElementById("mainContent");content&&window.innerWidth>768&&(content.width=window.innerWidth-275)})}).config(function($stateProvider,$urlRouterProvider,$httpProvider,$compileProvider,$ionicConfigProvider){/MSIE\s|Trident\/|Edge\//.test(window.navigator.userAgent)&&$ionicConfigProvider.platform.default.spinner.icon("android"),$ionicConfigProvider.backButton.previousTitleText(!1).text("Back"),/Firefox/.test(navigator.userAgent)&&$ionicConfigProvider.scrolling.jsScrolling(!1),$compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|ftp|mailto|chrome-extension|app|local|file):/),$compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|ftp|file|content|blob|ms-appx|x-wmapp0|chrome-extension|app|local):|data:image\//),$stateProvider.state("login",{url:"/login",templateUrl:"templates/login.html",controller:"LoginCtrl"}).state("app",{url:"/app",abstract:!0,templateUrl:"templates/menu.html",controller:"MenuCtrl"}).state("app.home",{url:"/home",views:{menuContent:{templateUrl:"templates/home.html",controller:"HomeCtrl"}},resolve:{checkValid:function($timeout,$q,$state,$rootScope,$filter,Utils){var total=$rootScope.controllers.length,filterFilter=$filter("filter"),invalidOrg=!(!$rootScope.activeController||0!==filterFilter($rootScope.controllers,{mac:$rootScope.activeController.mac}).length);return $rootScope.activeController||1!==total?!$rootScope.activeController||invalidOrg?(delete $rootScope.activeController,Utils.storage.remove("activeController"),$timeout(function(){$state.go("app.controllerSelect")}),$q.reject()):void 0:void Utils.setController(0)}}}).state("app.rules",{url:"/rules",views:{menuContent:{templateUrl:"templates/rules.html",controller:"RulesCtrl"}}}).state("app.controllerSelect",{url:"/controllerSelect",views:{menuContent:{templateUrl:"templates/controllerSelect.html",controller:"ControllerSelectCtrl"}}}).state("app.history",{url:"/history",views:{menuContent:{templateUrl:"templates/history.html",controller:"HistoryCtrl"}},resolve:{checkValid:function($rootScope,$q){if(!$rootScope.activeController)return $q.reject()}}}).state("app.settings",{url:"/settings",views:{menuContent:{templateUrl:"templates/settings.html",controller:"SettingsCtrl"}},resolve:{checkValid:function($rootScope,$q){if(!$rootScope.activeController)return $q.reject()}}}).state("app.help",{url:"/help",views:{menuContent:{templateUrl:"templates/help.html"}}}).state("otherwise",{url:"*path",template:"",controller:function($state,$rootScope){$rootScope.activeController?$state.go("app.home"):$state.go("app.controllerSelect")}}),$httpProvider.interceptors.push(function($rootScope,$q,$injector){return{request:function(config){return config.url.match(/^https?/)&&(config.cancel=$q.defer(),config.timeout=config.cancel.promise,"number"!=typeof config.retryCount&&(config.retryCount=0),config.suppressLoader||$rootScope.$broadcast("loading:show",{canceller:config.cancel})),config},response:function(response){return!response.config.suppressLoader&&response.config.url.match(/^https?/)&&$rootScope.$broadcast("loading:hide"),response},responseError:function(error){if(error.config.timeout&&error.config.timeout.$$state&&1===error.config.timeout.$$state.status&&(error.canceled=!0),!error.config.suppressLoader&&error.config.url.match(/^https?/)&&$rootScope.$broadcast("loading:hide"),error.status<=0&&!error.canceled){if(error.config.retryCount<3){var $http=$injector.get("$http");return error.config.retryCount++,$http(error.config)}return error.retryFailed=!0,error.canceled=!0,$q.reject(error)}return $q.reject(error)}}}),$ionicConfigProvider.views.forwardCache(!0)}).filter("unique",function(){return function(items,filterOn){if(filterOn===!1)return items;if((filterOn||angular.isUndefined(filterOn))&&angular.isArray(items)){var newItems=[],extractValueToCompare=function(item){return angular.isObject(item)&&angular.isString(filterOn)?item[filterOn]:item};angular.forEach(items,function(item){for(var isDuplicate=!1,i=0;i<newItems.length;i++)if(angular.equals(extractValueToCompare(newItems[i]),extractValueToCompare(item))){isDuplicate=!0;break}isDuplicate||newItems.push(item)}),items=newItems}return items}}).directive("geoRuleSetup",function($rootScope,$filter){return{restrict:"E",replace:!0,scope:{rule:"="},templateUrl:"templates/geoRuleSetup.html",link:function(scope,element){var map,marker,circle;scope.updateRule=function(){$rootScope.startGeofence(function(){window.geofence.addOrUpdate({id:scope.rule.direction+"-"+$rootScope.activeController.mac,latitude:scope.rule.start.lat,longitude:scope.rule.start.lng,radius:scope.rule.radius,transitionType:"open"===scope.rule.direction?1:2,notification:{title:"OpenGarage Reminder",text:"Tap here to "+scope.rule.direction+" the garage door...",openAppOnClick:!0}},function(){window.geofence.getWatched(function(fences){$rootScope.geoFences=JSON.parse(fences)})})})},scope.updateMarker=function(){marker&&marker.setMap(null),marker=new google.maps.Marker({position:scope.rule.start,map:map}),scope.updateRule()},scope.updateRadius=function(){circle&&circle.setMap(null),circle=new google.maps.Circle({strokeColor:"#FF0000",strokeOpacity:.8,strokeWeight:2,fillColor:"#FF0000",fillOpacity:.35,map:map,center:scope.rule.start,radius:parseInt(scope.rule.radius)}),scope.updateRule()},scope.updateMap=function(){return scope.rule.enable?void setTimeout(function(){map=new google.maps.Map(element[0].querySelectorAll(".map")[0],{zoom:16,streetViewControl:!1,mapTypeControl:!1,center:scope.rule.start}),google.maps.event.addListener(map,"click",function(e){scope.rule.start={lat:e.latLng.lat(),lng:e.latLng.lng()},scope.updateMarker(),scope.updateRadius()}),scope.updateMarker(),scope.updateRadius()},100):void window.geofence.remove(scope.rule.direction+"-"+$rootScope.activeController.mac,function(){window.geofence.getWatched(function(fences){$rootScope.geoFences=JSON.parse(fences)})})},scope.$watch("rule",function(){var currentRule=$filter("filter")($rootScope.geoFences,{id:scope.rule.direction+"-"+$rootScope.activeController.mac})[0];currentRule?(scope.rule.radius=currentRule.radius,scope.rule.start={lat:currentRule.latitude,lng:currentRule.longitude},scope.rule.enable=!0,scope.updateMap()):(scope.rule.radius=scope.rule.radius||500,scope.rule.start=scope.rule.start||{lat:30.296519,lng:-97.730185},scope.rule.enable=scope.rule.enable||!1,$rootScope.startGeofence(function(){navigator.geolocation.getCurrentPosition(function(position){scope.rule.start={lat:position.coords.latitude,lng:position.coords.longitude},scope.updateMap()},function(){scope.updateMap()},{timeout:1e4})}))})}}}),angular.module("opengarage.cloud",["opengarage.utils"]).factory("Cloud",["$injector","$rootScope","Utils","Settings",function($injector,$rootScope,Utils,Settings){var $http,$httpParamSerializerJQLike,$ionicPopup,requestAuth=function(){$ionicPopup=$ionicPopup||$injector.get("$ionicPopup");var scope=$rootScope.$new();scope.data={},$ionicPopup.show({templateUrl:"templates/cloudLogin.html",title:"OpenGarage.io Login",scope:scope,buttons:[{text:"Cancel"},{text:"<b>Login</b>",type:"button-positive",onTap:function(e){return!(!scope.data.username||!scope.data.password)||void e.preventDefault()}}]}).then(function(isValid){isValid&&login(scope.data.username,scope.data.password,syncStart)})},login=function(user,pass,callback){callback=callback||function(){},$http=$http||$injector.get("$http"),$httpParamSerializerJQLike=$httpParamSerializerJQLike||$injector.get("$httpParamSerializerJQLike"),$http({method:"POST",url:Settings.httpServer+"/api/user/signin",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$httpParamSerializerJQLike({email:encodeURIComponent(user),password:encodeURIComponent(pass)})}).then(function(result){void 0!==result.data.user&&(Utils.storage.set({cloudToken:result.data.user.apikey,cloudDataToken:sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(pass))}),$rootScope.isSynced=!0),callback(result)},function(){callback(!1)})},logout=function(){Utils.storage.remove("cloudToken"),$rootScope.isSynced=!1},syncStart=function(){getControllers(function(controllers){JSON.stringify(controllers)!==JSON.stringify($rootScope.controllers)&&Object.keys(controllers).length>0&&($rootScope.controllers=controllers,Utils.storage.set({controllers:JSON.stringify(controllers)},function(){}),Utils.updateQuickLinks())})},sync=function(callback){callback=callback||function(){},getControllers(function(data){data!==!1&&(Utils.storage.set({controllers:JSON.stringify(data)},callback),$rootScope.controllers=data,Utils.updateQuickLinks())})},deleteController=function(device,callback){callback=callback||function(){},$http=$http||$injector.get("$http");var local=Utils.storage.get(["cloudToken"]);$http({method:"DELETE",url:Settings.httpServer+"/api/device/"+device.deviceid,headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},params:{apikey:local.cloudToken}}).then(function(result){callback(result.data)},function(){callback(!1)})},getControllers=function(callback){callback=callback||function(){},$http=$http||$injector.get("$http"),$httpParamSerializerJQLike=$httpParamSerializerJQLike||$injector.get("$httpParamSerializerJQLike"),Utils.storage.get(["cloudToken"],function(local){return void 0===local.cloudToken||null===local.cloudToken?void callback(!1):void $http({method:"GET",url:Settings.httpServer+"/api/device",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},params:{apikey:local.cloudToken}}).then(function(result){if(void 0!==result.data.length)for(var i in result.data)result.data[i].hasOwnProperty("mac")||(result.data[i].mac=result.data[i].deviceid);callback(result.data)},function(){callback(!1)})})},saveController=function(callback){"function"!=typeof callback&&(callback=function(){}),$http=$http||$injector.get("$http"),$httpParamSerializerJQLike=$httpParamSerializerJQLike||$injector.get("$httpParamSerializerJQLike"),Utils.storage.get(["cloudToken","cloudDataToken"],function(local){if(null===local.cloudToken||void 0===local.cloudToken)return void callback(!1);var data={name:"My door",group:"default",deviceid:"deviceid",apikey:local.cloudToken,type:"01",ipAddr:"192."};$http({method:"POST",url:Settings.httpServer+"/api/device",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$httpParamSerializerJQLike(data)}).then(function(result){callback(result.data.success)},function(){callback(!1)})})},saveControllers=function(callback){"function"!=typeof callback&&(callback=function(){}),$http=$http||$injector.get("$http"),$httpParamSerializerJQLike=$httpParamSerializerJQLike||$injector.get("$httpParamSerializerJQLike"),Utils.storage.get(["cloudToken","cloudDataToken"],function(data){return null===data.cloudToken||void 0===data.cloudToken?void callback(!1):void $http({method:"POST",url:"https://opengarage.io/wp-admin/admin-ajax.php",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:$httpParamSerializerJQLike({token:data.cloudToken,controllerType:"opengarage",sites:encodeURIComponent(JSON.stringify(sjcl.encrypt(data.cloudDataToken,JSON.stringify($rootScope.controllers))))})}).then(function(result){result.data.success===!1?("BAD_TOKEN"===result.data.message&&handleExpiredLogin(),callback(!1,result.data.message)):(Utils.storage.set({cloudToken:result.data.token}),callback(result.data.success))},function(){callback(!1)})})},handleInvalidDataToken=function(){Utils.storage.remove("cloudDataToken"),$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),$ionicPopup.prompt({title:"Unable to read cloud data",subTitle:"Enter a valid password to decrypt the data",template:"Please enter your OpenSprinkler.com password. If you have recently changed your password, you may need to enter your previous password to decrypt the data.",inputType:"password",inputPlaceholder:"Password"}).then(function(password){Utils.storage.set({cloudDataToken:sjcl.codec.hex.fromBits(sjcl.hash.sha256.hash(password))}),sync()})},handleExpiredLogin=function(){Utils.storage.remove("cloudToken"),$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),$ionicPopup.confirm({title:"OpenGarage.io Login Expired",template:"Click here to re-login to OpenGarage.io"}).then(function(result){result&&requestAuth(function(result){result===!0&&sync()})})},getTokenUser=function(token){return atob(token).split("|")[0]},isLoggedIn=function(){var local=Utils.storage.get(["cloudToken","cloudDataToken"]);return void 0!==local.cloudToken&&null!==local.cloudToken&&(void 0!==local.cloudDataToken&&null!==local.cloudDataToken)};return Utils.storage.get(["cloudToken","cloudDataToken"],function(data){null===data.cloudToken||void 0===data.cloudToken||void 0===data.cloudDataToken||void 0===data.cloudDataToken?$rootScope.isSynced=!1:$rootScope.isSynced=!0}),{requestAuth:requestAuth,login:login,logout:logout,syncStart:syncStart,sync:sync,deleteController:deleteController,getControllers:getControllers,saveController:saveController,saveControllers:saveControllers,handleInvalidDataToken:handleInvalidDataToken,handleExpiredLogin:handleExpiredLogin,getTokenUser:getTokenUser,isLoggedIn:isLoggedIn}}]),angular.module("opengarage.controllers",["opengarage.utils","opengarage.cloud"]).controller("LoginCtrl",function($scope,$rootScope,$state,$ionicPopup,Cloud){return Cloud.isLoggedIn()?void $state.go("app.controllerSelect"):($scope.data={},$scope.submit=function(){$scope.data.username?$scope.data.password?Cloud.login($scope.data.username,$scope.data.password,function(result){return"string"==typeof result.data.error?void $ionicPopup.alert({template:"<p class='center'>"+result.data.error+"</p>"}):void $state.go("app.controllerSelect")}):$ionicPopup.alert({template:"<p class='center'>Please enter a password to continue.</p>"}):$ionicPopup.alert({template:"<p class='center'>Please enter a username to continue.</p>"})},void($scope.skipCloud=function(){$state.go("app.controllerSelect")}))}).controller("ControllerSelectCtrl",function($scope,$state,$rootScope,$timeout,$filter,$ionicModal,$ionicPopup,$ionicHistory,Utils,Cloud){return Cloud.isLoggedIn()?(Cloud.sync(),$scope.data={showDelete:!1},$scope.selectPhoto=Utils.selectPhoto,$scope.setController=function(index){Utils.setController(index),$ionicHistory.nextViewOptions({historyRoot:!0}),$state.go("app.home")},$scope.deleteController=function(index){var confirm=$ionicPopup.confirm({title:"Delete Controller",template:"Are you sure?"});confirm.then(function(ans){if(ans){var device=$rootScope.controllers[index];Cloud.deleteController(device,function(result){return"string"==typeof result.error?void $ionicPopup.alert({template:"<p>"+result.error+"</p>"}):(Utils.getControllerIndex()===index&&(delete $rootScope.activeController,Utils.storage.remove("activeController")),$rootScope.controllers.splice(index,1),void Utils.storage.set({controllers:JSON.stringify($rootScope.controllers)}))})}})},$scope.getTime=function(timestamp){return new Date(timestamp).toLocaleString()},void($scope.changeSync=function(){Cloud.syncStart()})):void $state.go("login")}).controller("HistoryCtrl",function($scope,$filter,$http,Utils){var timeout,startTimeout=function(){$http.pendingRequests.length<3&&Utils.getLogs(function(reply){$scope.onLogs(reply),timeout=setTimeout(function(){startTimeout()},15e3)})};$scope.onLogs=function(reply){if(reply){var i,current,day;for($scope.isLocal=!0,i=0;i<reply.length;i++)current=new Date(1e3*reply[i][0]).toDateString(),current!==day&&(day=current,reply.splice(i,0,{isDivider:"true",day:current}));$scope.logs=reply}else $scope.isLocal=!1},$scope.$on("$ionicView.beforeEnter",function(){startTimeout()}),$scope.$on("$ionicView.beforeLeave",function(){clearTimeout(timeout)})}).controller("SettingsCtrl",function($scope,$state,$ionicPopup,Utils){$scope.settings={},$scope.changePassword=Utils.changePassword,$scope.restart=Utils.restartController,$scope.submit=function(){Utils.saveOptions($scope.settings,function(reply){var text;reply?(text="Settings saved successfully!",$state.go("app.home")):text="Unable to save settings. Please check the connection to the device and try again.",$ionicPopup.alert({template:"<p class='center'>"+text+"</p>"})})},$scope.$on("$ionicView.beforeEnter",function(){Utils.getControllerOptions(function(reply){reply?($scope.isLocal=!0,delete reply.mod,delete reply.fwv,$scope.settings=reply):$scope.isLocal=!1},null,!0)})}).controller("MenuCtrl",function($scope,$rootScope,$state,$ionicActionSheet,$ionicPopup,$ionicSideMenuDelegate,$timeout,Utils,Cloud){return Cloud.isLoggedIn()?($scope.sideMenuDraggable=0===Utils.getControllerIndex(),$rootScope.$on("controllerUpdated",function(){$scope.sideMenuDraggable=0===Utils.getControllerIndex()}),$scope.showAddController=function(){$ionicActionSheet.show({buttons:[{text:"<i class='icon ion-ios-color-wand'></i> Setup New Device"}],titleText:"Add Controller",cancelText:"Cancel",buttonClicked:function(index){return 0===index&&Utils.checkNewController(function(result){result||$ionicPopup.alert({template:"<p class='center'>Please first connect the power to your OpenGarage. Once complete, connect this device to the wifi network broadcast by the OpenGarage (named OG_XXXXXX) and reopen this app.</p>"})},!1),!0}})},void($scope.closeMenu=function(){$ionicSideMenuDelegate.toggleLeft(!1)})):void $state.go("login")}).controller("HomeCtrl",function($rootScope,$scope,$ionicPopup,$filter,$http,$timeout,Utils){var timeout,startTimeout=function(){$http.pendingRequests.length<3&&Utils.updateController(function(){timeout=setTimeout(function(){startTimeout()},15e3)})};$scope.toggleDoor=function(){var password=$rootScope.activeController.password;void 0===password||""===password?$ionicPopup.confirm({title:"Empty Password Field",template:"<p class='center'>Are you sure you want to proceed?</p>"}).then(function(result){result&&($rootScope.activeController.password="",Utils.toggleDoor(function(){var index=$rootScope.controllers.indexOf(($filter("filter")($rootScope.controllers,{mac:$rootScope.activeController.mac})||[])[0]);index&&($rootScope.controllers[index]=$rootScope.activeController,Utils.storage.set({controllers:JSON.stringify($rootScope.controllers),activeController:JSON.stringify($rootScope.activeController)}),$rootScope.$broadcast("controllersUpdated"))}))}):Utils.toggleDoor(function(){var index=$rootScope.controllers.indexOf(($filter("filter")($rootScope.controllers,{mac:$rootScope.activeController.mac})||[])[0]);index&&($rootScope.controllers[index]=$rootScope.activeController,Utils.storage.set({controllers:JSON.stringify($rootScope.controllers),activeController:JSON.stringify($rootScope.activeController)}),$rootScope.$broadcast("controllersUpdated"))})},$scope.selectPhoto=Utils.selectPhoto,$scope.currentIndex=Utils.getControllerIndex(),$scope.changeController=function(direction){clearTimeout(timeout);var current=Utils.getControllerIndex(),to=current+direction;current===-1||to<0||to>=$rootScope.controllers.length||($scope.currentIndex=to,Utils.setController(to,startTimeout))},$scope.$on("$ionicView.beforeLeave",function(){clearTimeout(timeout)}),$scope.$on("$ionicView.beforeEnter",startTimeout),$rootScope.$on("controllerUpdated",function(){$scope.currentIndex=Utils.getControllerIndex(),$timeout(function(){$scope.$apply()})})}).controller("RulesCtrl",function($scope,$rootScope){var reset=function(){$scope.geo={home:{direction:"open"},away:{direction:"close"}},$scope.set("home")};$scope.isAndroid=ionic.Platform.isAndroid(),$scope.set=function(type){"home"===type?$scope.current=$scope.geo.home:$scope.current=$scope.geo.away},$rootScope.$on("controllerUpdated",reset),reset()}),angular.module("opengarage.utils",[]).factory("Utils",["$injector","$rootScope","Settings","CloudProxy",function($injector,$rootScope,Settings,CloudProxy){var $http,$q,$filter,$ionicPopup,$ionicModal,isFireFox=/Firefox/.test(window.navigator.userAgent),isIE=/MSIE\s|Trident\/|Edge\//.test(window.navigator.userAgent),storage={get:function(query,callback){callback=callback||function(){};var i,data={};"string"==typeof query&&(query=[query]);for(i in query)query.hasOwnProperty(i)&&(data[query[i]]=localStorage.getItem(query[i]));return callback(data),data},set:function(query,callback){callback=callback||function(){},$ionicPopup=$ionicPopup||$injector.get("$ionicPopup");var i;if("object"==typeof query)for(i in query)query.hasOwnProperty(i)&&localStorage.setItem(i,query[i]);callback(!0)},remove:function(query,callback){callback=callback||function(){};var i;"string"==typeof query&&(query=[query]);for(i in query)query.hasOwnProperty(i)&&localStorage.removeItem(query[i]);callback(!0)}},intToIP=function(int){return int%256+"."+(int/256>>0)%256+"."+((int/256>>0)/256>>0)%256+"."+(((int/256>>0)/256>>0)/256>>0)},getControllerSettings=function(callback,ip,token){if(!ip&&!token&&!$rootScope.activeController)return void callback(!1);$http=$http||$injector.get("$http");var promise,data={referer:"client",apikey:encodeURIComponent(token||$rootScope.activeController.apikey),deviceid:$rootScope.activeController.deviceid,cmd:JSON.stringify({q:"jc",args:{}}),ch:"jc"},isCloud=token||!ip&&$rootScope.activeController&&$rootScope.activeController.apikey;return promise=CloudProxy.send(isCloud,data),promise.then(function(result){return void 0!==result.data.error?void callback(!1):(result.data.lastUpdate=(new Date).getTime(),void callback(result.data))},function(){callback(!1)})},getControllerOptions=function(callback,ip,showLoader){if(!$rootScope.activeController)return void callback(!1);var promise,data={referer:"client",apikey:$rootScope.activeController.apikey,deviceid:$rootScope.activeController.deviceid,cmd:JSON.stringify({q:"jo",args:{}}),ch:"jo"},isCloud=!ip&&$rootScope.activeController&&$rootScope.activeController.apikey;return promise=CloudProxy.send(isCloud,data,showLoader),promise.then(function(result){return void 0!==result.data.error?void callback(!1):void 0!==result.data.r&&""!==result.data.r?void callback(!1):void callback(result.data)},function(){callback(!1)})},updateController=function(callback){$q=$q||$injector.get("$q"),$filter=$filter||$injector.get("$filter"),callback=callback||function(){};var promise,controller=angular.copy($rootScope.activeController),save=function(data){$rootScope.connected=!0,angular.extend(controller,data)};promise=void 0===controller.mnt?$q.when().then(function(){return getControllerSettings(save)}).then(function(){return getControllerOptions(save)}):$q.when().then(function(){return getControllerSettings(save)}),promise.then(function(){var index=getControllerIndex();index>=0&&controller.mac===$rootScope.activeController.mac&&($rootScope.controllers[index]=controller,$rootScope.activeController=controller,$rootScope.$broadcast("controllerUpdated"),storage.set({controllers:JSON.stringify($rootScope.controllers),activeController:JSON.stringify($rootScope.activeController)})),callback()})},getControllerIndex=function(mac){if(!$rootScope.activeController&&!mac)return null;mac=mac||(null===$rootScope.activeController?"":$rootScope.activeController.mac);for(var i=0;i<$rootScope.controllers.length;i++)if($rootScope.controllers[i].mac===mac)return i;return null},setController=function(controller,callback){callback=callback||function(){},cancelPendingHttp(),$rootScope.activeController="object"==typeof controller?controller:$rootScope.controllers[controller],$rootScope.connected=!1,updateController(),storage.set({activeController:JSON.stringify($rootScope.activeController)},callback),updateQuickLinks()},addController=function(data,callback){return callback=callback||function(){},$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),data.token||data.ip&&data.password?data.token&&32!==data.token.length?($ionicPopup.alert({template:"<p class='center'>A valid Blynk token is required. Please verify your token and try again.</p>"}),void callback(!1)):void getControllerSettings(function(result){if(result||($ionicPopup.alert({template:"<p class='center'>Unable to find device. Please verify the IP/password and try again.</p>"}),callback(!1)),result.mac){if(result.ip=data.ip,result.password=data.password,$filter=$filter||$injector.get("$filter"),$filter("filter")($rootScope.controllers,{mac:result.mac}).length>0)return $ionicPopup.alert({template:"<p class='center'>Device already added to site list.</p>"}),void callback(!1);getControllerOptions(function(reply){angular.extend(result,reply),$rootScope.controllers.push(result),storage.set({controllers:JSON.stringify($rootScope.controllers)}),$rootScope.$broadcast("controllersUpdated"),callback(!0)},data.ip)}data.token&&$http({method:"POST",url:"https://openthings.io/wp-admin/admin-ajax.php",headers:{"Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"},data:"action=blynkCloud&path="+data.token+"/get/V2",suppressLoader:!0}).then(function(reply){return"Invalid token."===reply.data?($ionicPopup.alert({template:"<p class='center'>Invalid Blynk token.</p>"}),void callback(!1)):(reply=reply.data.pop().split(" ")[1].split("_")[1],result.mac="5C:CF:7F:"+reply.match(/.{1,2}/g).join(":"),result.auth=data.token,$filter("filter")($rootScope.controllers,{mac:result.mac}).length>0?($ionicPopup.alert({template:"<p class='center'>Device already added to site list.</p>"}),void callback(!1)):($rootScope.controllers.push(result),storage.set({controllers:JSON.stringify($rootScope.controllers)}),$rootScope.$broadcast("controllersUpdated"),void callback(!0)))})},data.token?null:data.ip,data.token?data.token:null):($ionicPopup.alert({template:"<p class='center'>Both an IP and password are required.</p>"}),void callback(!1))},checkNewController=function(callback,suppressLoader){$http=$http||$injector.get("$http"),callback=callback||function(){},$ionicModal=$ionicModal||$injector.get("$ionicModal"),$http({method:"GET",url:Settings.defaultIp+"/js",suppressLoader:"undefined"==typeof suppressLoader||suppressLoader,timeout:5e3,retryCount:3}).then(function(result){if(!result.data.ssids)return void callback(!1);var scope=$rootScope.$new();scope.data={},scope.save=function(){scope.modal.hide(),connectNewController(scope.data)},scope.ssids=result.data.ssids,$ionicModal.fromTemplateUrl("templates/newControllerSetup.html",{scope:scope,animation:"slide-in-up"}).then(function(modal){scope.modal=modal,modal.show()}),callback(!0)},function(){callback(!1)})},connectNewController=function(data){$http=$http||$injector.get("$http"),$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),storage.get("cloudToken",function(local){var auth="&auth="+local.cloudToken;$http({method:"GET",url:Settings.defaultIp+"cc?ssid="+encodeURIComponent(data.ssid)+"&pass="+encodeURIComponent(data.password)+auth}).then(function(result){1===result.data.result?setTimeout(saveNewController,2e3):$ionicPopup.alert({template:"<p class='center'>Invalid SSID/password combination. Please try again.</p>"}).then(checkNewController)},function(){$ionicPopup.alert({template:"<p class='center'>Unable to reach controller. Please try again.</p>"}).then(checkNewController)})})},saveNewController=function(){$http=$http||$injector.get("$http"),$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),$http({method:"GET",url:"http://192.168.4.1/jt"}).then(function(result){return 0===result.data.ip?void $ionicPopup.alert({template:"<p class='center'>Controller was unable to connect. Please check your SSID and password and try again.</p>"}):($ionicPopup.alert({template:"<p class='center'>Controller succesfully connected! Please wait while the device reboots.</p>"}),$rootScope.controllers.push({ip:intToIP(result.data.ip),password:"opendoor",name:"My OpenGarage"}),storage.set({controllers:JSON.stringify($rootScope.controllers)}),void $rootScope.$broadcast("controllersUpdated"));
})},scanLocalNetwork=function(callback){return window.networkinterface?void window.networkinterface.getIPAddress(function(router){if(!router)return void callback(!1);$q=$q||$injector.get("$q"),$http=$http||$injector.get("$http"),router=router.split("."),router.pop();var i,baseip=router.join("."),check=function(ip){return $http({method:"GET",url:"http://"+baseip+"."+ip+"/jc",suppressLoader:!0,timeout:6e3,retryCount:3}).then(function(result){result.data&&result.data.mac&&matches.push(baseip+"."+ip)}).catch(function(){return!1})},queue=[],matches=[];for($rootScope.$broadcast("loading:show"),i=1;i<=244;i++)queue.push(check(i));$q.all(queue).then(function(){$rootScope.$broadcast("loading:hide"),callback(matches)})}):void callback(!1)},requestPassword=function(callback){$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),$ionicPopup.prompt({title:"Enter Controller Password",template:"Enter your controller's password below:",inputType:"password",inputPlaceholder:"Controller Password"}).then(function(password){callback(password)})},updateQuickLinks=function(){window.ThreeDeeTouch&&window.ThreeDeeTouch.isAvailable(function(isAvailable){if(isAvailable&&$rootScope.controllers.length){for(var links=[],limit=$rootScope.controllers.length<4?$rootScope.controllers.length:4,i=0;i<limit;i++)links.push({type:"toggle-"+$rootScope.controllers[i].mac,title:"Toggle "+$rootScope.controllers[i].name,iconType:"Update"});window.ThreeDeeTouch.configureQuickActions(links)}})},cancelPendingHttp=function(){$http=$http||$injector.get("$http"),$http.pendingRequests.forEach(function(pendingReq){pendingReq.cancel&&pendingReq.cancel.resolve()})};return isFireFox&&(HTMLElement.prototype.click=function(){var evt=this.ownerDocument.createEvent("MouseEvents");evt.initMouseEvent("click",!0,!0,this.ownerDocument.defaultView,1,0,0,0,0,!1,!1,!1,!1,0,null),this.dispatchEvent(evt)}),$rootScope.$on("controllersUpdated",updateQuickLinks),{isIE:isIE,storage:storage,getControllerSettings:getControllerSettings,getControllerOptions:getControllerOptions,updateController:updateController,setController:setController,getControllerIndex:getControllerIndex,checkNewController:checkNewController,updateQuickLinks:updateQuickLinks,showAddController:function(callback){callback=callback||function(){},$ionicPopup=$ionicPopup||$injector.get("$ionicPopup");var scope=$rootScope.$new();scope.data={canScan:!!window.networkinterface},scope.scan=function(){scanLocalNetwork(function(result){return result&&result.length?void(scope.data.foundControllers=result):void $ionicPopup.alert({template:"<p class='center'>No devices detected on your network</p>"})})},scope.save=function(ip){popup.close(),requestPassword(function(password){addController({ip:ip,password:password})})};var popup=$ionicPopup.show({templateUrl:"templates/addController.html",title:"Add Controller",scope:scope,buttons:[{text:"Cancel"},{text:"<b>Add</b>",type:"button-positive",onTap:function(e){return!(!scope.data.ip||!scope.data.password)||void e.preventDefault()}}]});popup.then(function(isValid){isValid&&addController(scope.data,callback)})},showAddBlynk:function(callback){callback=callback||function(){},$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),$ionicPopup.prompt({title:"Add Controller by Blynk",template:"Enter your Blynk Auth token below:",inputType:"text",inputPlaceholder:"Your Blynk Auth token"}).then(function(token){token&&addController({token:token},callback)})},toggleDoor:function(auth,callback){"function"==typeof auth&&(callback=auth,auth=null),callback=callback||function(){};var promise,data={referer:"client",apikey:$rootScope.activeController.apikey,deviceid:$rootScope.activeController.deviceid,cmd:JSON.stringify({q:"cc",args:{p:"click",dkey:encodeURIComponent($rootScope.activeController.password)}}),ch:"cc"};auth||$rootScope.activeController&&$rootScope.activeController.apikey?promise=CloudProxy.send(!0,data):(data.params={dkey:encodeURIComponent($rootScope.activeController.password),click:1},promise=CloudProxy.send(!1,data)),promise.then(function(){callback(!0)},function(){callback(!1)})},restartController:function(){$ionicPopup=$ionicPopup||$injector.get("$ionicPopup"),$rootScope.activeController&&$ionicPopup.confirm({title:"Restart Controller?",template:"<p class='center'>Are you sure you want to restart the controller?</p>"}).then(function(result){if(result){$http=$http||$injector.get("$http");var promise,data={referer:"client",apikey:$rootScope.activeController.apikey,deviceid:$rootScope.activeController.deviceid,cmd:JSON.stringify({q:"cc",args:{p:"reboot",dkey:encodeURIComponent($rootScope.activeController.password)}}),ch:"cc"};return $rootScope.activeController&&$rootScope.activeController.apikey?promise=CloudProxy.send(!0,data):(data.params={dkey:encodeURIComponent($rootScope.activeController.password),reboot:1},promise=CloudProxy.send(!1,data)),promise.then(function(result){void 0!==result.data.result&&1!==result.data.result?$ionicPopup.alert({title:"Check device key and try again."+JSON.stringify(result)}):$ionicPopup.alert({title:"Reboot succesful!"})})}})},saveOptions:function(settings,callback){var promise,data={referer:"client",apikey:$rootScope.activeController.apikey,deviceid:$rootScope.activeController.deviceid,cmd:JSON.stringify({q:"co",args:settings}),ch:"co"};return $rootScope.activeController&&$rootScope.activeController.apikey?promise=CloudProxy.send(!0,data):(data.params=settings,data.params.dkey=encodeURIComponent($rootScope.activeController.password),promise=CloudProxy.send(!1,data)),promise.then(function(result){callback(angular.equals(result.data,{})?!1:result.data)},function(){callback(!1)})},changePassword:function(){$ionicPopup=$ionicPopup||$injector.get("$ionicPopup");var scope=$rootScope.$new();scope.pwd={},$ionicPopup.show({templateUrl:"templates/changePassword.html",title:"Change Password",scope:scope,buttons:[{text:"Cancel"},{text:"<b>Go</b>",type:"button-positive"}]}).then(function(){if(scope.pwd.nkey&&scope.pwd.ckey&&scope.pwd.nkey===scope.pwd.ckey){scope.pwd.dkey=encodeURIComponent($rootScope.activeController.password);var promise,data={referer:"client",apikey:$rootScope.activeController.apikey,deviceid:$rootScope.activeController.deviceid,cmd:JSON.stringify({q:"co",args:scope.pwd}),ch:"co"};$rootScope.activeController&&$rootScope.activeController.apikey?promise=CloudProxy.send(!0,data):(data.params=scope.pwd,promise=CloudProxy.send(!1,data)),promise.then(function(result){if(void 0!==result.data.error)return void $ionicPopup.alert({template:"<p class='center'>"+result.data.error+"</p>"});$rootScope.activeController.password=scope.pwd.nkey;var index=$rootScope.controllers.indexOf(($filter("filter")($rootScope.controllers,{mac:$rootScope.activeController.mac})||[])[0]);index&&($rootScope.controllers[index]=$rootScope.activeController,storage.set({controllers:JSON.stringify($rootScope.controllers),activeController:JSON.stringify($rootScope.activeController)}),$rootScope.$broadcast("controllersUpdated")),$ionicPopup.alert({template:"<p class='center'>Password updated succesfully!</p>"})})}})},getLogs:function(callback){if(!$rootScope.activeController)return void callback(!1);$http=$http||$injector.get("$http");var promise,data={referer:"client",apikey:$rootScope.activeController.apikey,deviceid:$rootScope.activeController.deviceid,cmd:JSON.stringify({q:"jl",args:{}}),ch:"jl"},isCloud=$rootScope.activeController&&$rootScope.activeController.apikey;return promise=CloudProxy.send(isCloud,data),promise.then(function(result){return $rootScope.activeController&&$rootScope.activeController.apikey&&void 0!==result.data.error?void callback(!1):void callback(result.data.logs.sort(function(a,b){return b[0]-a[0]}))},function(){callback(!1)})},selectPhoto:function($event,index,deletePhoto){$ionicModal=$ionicModal||$injector.get("$ionicModal");var scope=$rootScope.$new(),fileInput=angular.element(document.getElementById("photoUpload"));return scope.data={image:!1,cropped:!1,index:!1},scope.uploadPhoto=function(index){scope.crop.hide(),getControllerIndex()===index&&($rootScope.activeController.image=scope.data.cropped,storage.set({activeController:JSON.stringify($rootScope.activeController)})),$rootScope.controllers[index].image=scope.data.cropped,storage.set({controllers:JSON.stringify($rootScope.controllers)}),$rootScope.$broadcast("controllersUpdated")},$ionicModal.fromTemplateUrl("templates/crop.html",{scope:scope}).then(function(modal){scope.crop=modal}),$event.stopPropagation(),deletePhoto?(getControllerIndex()===index&&(delete $rootScope.activeController.image,storage.set({activeController:JSON.stringify($rootScope.activeController)})),delete $rootScope.controllers[index].image,storage.set({controllers:JSON.stringify($rootScope.controllers)}),void $rootScope.$broadcast("controllersUpdated")):(fileInput.parent()[0].reset(),fileInput.one("change",function(){var file=fileInput[0].files[0];if(file.type&&file.type.match("image.*")){var reader=new FileReader;reader.onload=function(evt){scope.data.image=evt.target.result,scope.data.index=index,scope.crop.show()},reader.readAsDataURL(file)}}),void fileInput[0].click())}}}]).factory("CloudProxy",["$injector","$rootScope","Settings",function($injector,$rootScope,Settings){var $http,$q,send=function(isCloud,data){var promise;return $http=$http||$injector.get("$http"),$q=$q||$injector.get("$q"),promise=isCloud?$http.post(Settings.httpServer+"/api/proxy/client/send_request",data).then(function(result){var deferred=$q.defer();return void 0!==result.data.r&&(""===result.data.r?result.data=void 0!==result.data.error?result.data.error:{}:result.data=JSON.parse(result.data.r)),deferred.resolve(result),deferred.promise}):$http({method:"GET",url:"http://"+$rootScope.activeController.ipAddr+"/"+data.ch,params:data.params,paramSerializer:"$httpParamSerializerJQLike",suppressLoader:!$rootScope.activeController.ipAddr})};return{send:send}}]).factory("Settings",[function(){var domain="cloud.opengarage.io";return{httpServer:"http://"+domain,websocketServer:"ws://"+domain,defaultIp:"http://192.168.4.1",http:"http://"}}]),angular.module("opengarage.watch",[]).factory("Watch",["$injector","$rootScope",function($injector,$rootScope){var loadApp=function(){void 0!==window.applewatch&&window.applewatch.loadAppMain({title:"OpenGarage",label:{value:"Toggle Garage Door",color:"#FFA500",font:{size:12}},table:{callback:"toggleDoorByIndex",alpha:1,rows:makeAppList()}})},makeAppList=function(){var rows=[];return $rootScope.controllers.forEach(function(controller){var item={type:"OneColumnSelectableRowType",group:{backgroundColor:"#1884C4",cornerRadius:8},label:{value:" "+controller.name}};if(controller.image){var canvas=document.createElement("canvas"),ctx=canvas.getContext("2d"),img=new Image;img.src=controller.image,canvas.width=25,canvas.height=30,ctx.drawImage(img,0,0,canvas.width,canvas.height),item.imageLeft={data:canvas.toDataURL("image/png"),width:canvas.width,height:canvas.height}}rows.push(item)}),rows};return $rootScope.$on("controllersUpdated",loadApp),{loadApp:loadApp}}]);
//# sourceMappingURL=app.min.js.map
